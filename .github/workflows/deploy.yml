name: deploy

on:
  - push
  - pull_request

jobs:
  # Initial task to compile a JAR, store as a pipeline artifact to be used by
  # downstream builders.
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Parse Ref
        id: parse-ref
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '9.0.4'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: '1.10.1.469'

      - name: Run tests
        run: lein test

  # Use GraalVM on macOS to convert JAR to a native macOS binary
  native-image-mac:
    needs: [build-jar]
    runs-on: macOS-10.14
    steps:
      - name: Git checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Parse Ref
        id: parse-ref
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '9.0.4'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: '1.10.1.469'

      - name: Parse Ref
        id: parse-ref
        run: |
          echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      # - uses: actions/download-artifact@v1
      #   with:
      #     name: jar
      #     path: .

      - name: Prepare GraalVM
        uses: DeLaGuardo/setup-graalvm@1.0
        with:
          graalvm-version: "19.2.1"

      - name: Install native-image
        run: gu install native-image

      - name: Run tests
        run: lein test

      - name: Build macOS native image
        run: |
          make copy-libs-to-resource clean all package-macos
